var _chobytes$elm_spa_example$Main$Model = function (a) {
	return {page: a};
};
var _chobytes$elm_spa_example$Main$Blank = {ctor: 'Blank'};
var _chobytes$elm_spa_example$Main$UsersPage = function (a) {
	return {ctor: 'UsersPage', _0: a};
};
var _chobytes$elm_spa_example$Main$NotFound = {ctor: 'NotFound'};
var _chobytes$elm_spa_example$Main$UsersMsg = function (a) {
	return {ctor: 'UsersMsg', _0: a};
};
var _chobytes$elm_spa_example$Main$update = F2(
	function (msg, model) {
		var _p0 = {ctor: '_Tuple2', _0: msg, _1: model.page};
		if (_p0._0.ctor === 'SetRoute') {
			var _p1 = _p0._0._0;
			if (_p1.ctor === 'Just') {
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							page: _chobytes$elm_spa_example$Main$UsersPage(_chobytes$elm_spa_example$Page_Users$init)
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			} else {
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{page: _chobytes$elm_spa_example$Main$NotFound}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			}
		} else {
			switch (_p0._1.ctor) {
				case 'UsersPage':
					var _p2 = A2(_chobytes$elm_spa_example$Page_Users$update, _p0._0._0, _p0._1._0);
					var nextModel = _p2._0;
					var subCmd = _p2._1;
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{
								page: _chobytes$elm_spa_example$Main$UsersPage(nextModel)
							}),
						_1: A2(_elm_lang$core$Platform_Cmd$map, _chobytes$elm_spa_example$Main$UsersMsg, subCmd)
					};
				case 'NotFound':
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				default:
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
			}
		}
	});
var _chobytes$elm_spa_example$Main$view = function (model) {
	var _p3 = model.page;
	switch (_p3.ctor) {
		case 'Blank':
			return _elm_lang$html$Html$text('');
		case 'NotFound':
			return _elm_lang$html$Html$text('404\'');
		default:
			return A2(
				_elm_lang$html$Html$map,
				_chobytes$elm_spa_example$Main$UsersMsg,
				_chobytes$elm_spa_example$Page_Users$view(_p3._0));
	}
};
var _chobytes$elm_spa_example$Main$subscriptions = function (model) {
	return A2(
		_elm_lang$core$Platform_Sub$map,
		function (_p4) {
			return _chobytes$elm_spa_example$Main$UsersMsg(
				_chobytes$elm_spa_example$Page_Users$SetUser(_p4));
		},
		_chobytes$elm_spa_example$Ports$receiveUser(
			_elm_lang$core$Json_Decode$decodeValue(_chobytes$elm_spa_example$Data_User$decoder)));
};
var _chobytes$elm_spa_example$Main$SetRoute = function (a) {
	return {ctor: 'SetRoute', _0: a};
};
var _chobytes$elm_spa_example$Main$init = function (location) {
	return A2(
		_chobytes$elm_spa_example$Main$update,
		_chobytes$elm_spa_example$Main$SetRoute(
			_chobytes$elm_spa_example$Router$match(location)),
		{
			page: _chobytes$elm_spa_example$Main$UsersPage(_chobytes$elm_spa_example$Page_Users$init)
		});
};
var _chobytes$elm_spa_example$Main$main = A2(
	_elm_lang$navigation$Navigation$program,
	function (_p5) {
		return _chobytes$elm_spa_example$Main$SetRoute(
			_chobytes$elm_spa_example$Router$match(_p5));
	},
	{init: _chobytes$elm_spa_example$Main$init, view: _chobytes$elm_spa_example$Main$view, update: _chobytes$elm_spa_example$Main$update, subscriptions: _chobytes$elm_spa_example$Main$subscriptions})();
