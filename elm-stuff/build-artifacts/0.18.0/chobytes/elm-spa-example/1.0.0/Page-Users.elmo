var _chobytes$elm_spa_example$Page_Users$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'SetSearchForm':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{searchForm: _p0._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'SearchUser':
				var nextModel = _elm_lang$core$Native_Utils.update(
					model,
					{searchForm: ''});
				return {
					ctor: '_Tuple2',
					_0: nextModel,
					_1: _chobytes$elm_spa_example$Ports$searchUsers(model.searchForm)
				};
			default:
				if (_p0._0.ctor === 'Ok') {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{
								user: _elm_lang$core$Result$Ok(_p0._0._0)
							}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{
								user: _elm_lang$core$Result$Err(_p0._0._0)
							}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				}
		}
	});
var _chobytes$elm_spa_example$Page_Users$Model = F2(
	function (a, b) {
		return {searchForm: a, user: b};
	});
var _chobytes$elm_spa_example$Page_Users$init = A2(
	_chobytes$elm_spa_example$Page_Users$Model,
	'',
	_elm_lang$core$Result$Err('meow'));
var _chobytes$elm_spa_example$Page_Users$SetUser = function (a) {
	return {ctor: 'SetUser', _0: a};
};
var _chobytes$elm_spa_example$Page_Users$SearchUser = {ctor: 'SearchUser'};
var _chobytes$elm_spa_example$Page_Users$SetSearchForm = function (a) {
	return {ctor: 'SetSearchForm', _0: a};
};
var _chobytes$elm_spa_example$Page_Users$view = function (model) {
	var userRes = function () {
		var _p1 = model.user;
		if (_p1.ctor === 'Err') {
			return _elm_lang$html$Html$text(_p1._0);
		} else {
			return _elm_lang$html$Html$text(
				_elm_lang$core$Basics$toString(_p1._0));
		}
	}();
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$h1,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('Github!'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$fieldset,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$legend,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text('Search for Github User by Username'),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$input,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$value(model.searchForm),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$type_('text'),
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html_Events$onInput(_chobytes$elm_spa_example$Page_Users$SetSearchForm),
											_1: {ctor: '[]'}
										}
									}
								},
								{ctor: '[]'}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$button,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Events$onClick(_chobytes$elm_spa_example$Page_Users$SearchUser),
										_1: {ctor: '[]'}
									},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text('Search'),
										_1: {ctor: '[]'}
									}),
								_1: {ctor: '[]'}
							}
						}
					}),
				_1: {
					ctor: '::',
					_0: userRes,
					_1: {ctor: '[]'}
				}
			}
		});
};
